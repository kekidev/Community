{"ast":null,"code":"import _defineProperty from \"/Users/keki/dev/websites/lireddit/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/keki/dev/websites/lireddit/web/src/pages/_app.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { Provider, createClient } from \"urql\";\nimport theme from \"../theme\";\nvar client = createClient({\n  url: \"http://localhost:4000/graphql\",\n  fetchOptions: {\n    credentials: \"include\"\n  }\n});\n\nfunction MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    value: client,\n    children: /*#__PURE__*/_jsxDEV(ChakraProvider, {\n      resetCSS: true,\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MyApp;\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["/Users/keki/dev/websites/lireddit/web/src/pages/_app.tsx"],"names":["ChakraProvider","Provider","createClient","theme","client","url","fetchOptions","credentials","MyApp","Component","pageProps"],"mappings":";;;;;;;;AAAA,SAASA,cAAT,QAAkD,kBAAlD;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,MAAvC;AAEA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,IAAMC,MAAM,GAAGF,YAAY,CAAC;AAC1BG,EAAAA,GAAG,EAAE,+BADqB;AAE1BC,EAAAA,YAAY,EAAE;AAAEC,IAAAA,WAAW,EAAE;AAAf;AAFY,CAAD,CAA3B;;AAKA,SAASC,KAAT,OAAyC;AAAA,MAAxBC,SAAwB,QAAxBA,SAAwB;AAAA,MAAbC,SAAa,QAAbA,SAAa;AACvC,sBACE,QAAC,QAAD;AAAU,IAAA,KAAK,EAAEN,MAAjB;AAAA,2BACE,QAAC,cAAD;AAAgB,MAAA,QAAQ,MAAxB;AAAyB,MAAA,KAAK,EAAED,KAAhC;AAAA,6BACE,QAAC,SAAD,oBAAeO,SAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;KARQF,K;AAUT,eAAeA,KAAf","sourcesContent":["import { ChakraProvider, ColorModeProvider } from \"@chakra-ui/react\";\nimport { Provider, createClient } from \"urql\";\n\nimport theme from \"../theme\";\n\nconst client = createClient({\n  url: \"http://localhost:4000/graphql\",\n  fetchOptions: { credentials: \"include\" },\n});\n\nfunction MyApp({ Component, pageProps }) {\n  return (\n    <Provider value={client}>\n      <ChakraProvider resetCSS theme={theme}>\n        <Component {...pageProps} />\n      </ChakraProvider>\n    </Provider>\n  );\n}\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}