{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/keki/dev/websites/lireddit/web/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/keki/dev/websites/lireddit/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/keki/dev/websites/lireddit/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"/Users/keki/dev/websites/lireddit/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _jsxFileName = \"/Users/keki/dev/websites/lireddit/web/src/pages/login.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Box, Button, useToast } from \"@chakra-ui/react\";\nimport { Form, Formik } from \"formik\";\nimport React from \"react\";\nimport { InputField } from \"../components/InputField\";\nimport { Wrapper } from \"../components/Wrapper\";\nimport { useLoginMutation } from \"../generated/graphql\";\nimport { toErrorMap } from \"../utils/toErrorMap\";\nimport { useRouter } from \"next/router\";\nimport { Navbar } from \"../components/Navbar\";\nimport { useMeQuery } from \"../generated/graphql\";\n\nvar Login = function Login(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var router = useRouter();\n\n  var _useMeQuery = useMeQuery(),\n      _useMeQuery2 = _slicedToArray(_useMeQuery, 1),\n      data = _useMeQuery2[0].data;\n\n  function delay(ms) {\n    return new Promise(function (resolve) {\n      return setTimeout(resolve, ms);\n    });\n  }\n\n  if (data !== null && data !== void 0 && data.me) {\n    alert(\"이미 로그인 되어 있습니다\");\n    router.push(\"/\");\n  }\n\n  var toast = useToast();\n\n  var _useLoginMutation = useLoginMutation(),\n      _useLoginMutation2 = _slicedToArray(_useLoginMutation, 2),\n      login = _useLoginMutation2[1];\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Wrapper, {\n      variant: \"small\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          username: \"\",\n          password: \"\"\n        },\n        onSubmit: /*#__PURE__*/function () {\n          var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref2) {\n            var _response$data, _response$data2;\n\n            var setErrors, response;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    setErrors = _ref2.setErrors;\n                    _context.next = 3;\n                    return login({\n                      options: values\n                    });\n\n                  case 3:\n                    response = _context.sent;\n\n                    if (!((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.login.errors)) {\n                      _context.next = 8;\n                      break;\n                    }\n\n                    setErrors(toErrorMap(response.data.login.errors));\n                    _context.next = 14;\n                    break;\n\n                  case 8:\n                    if (!((_response$data2 = response.data) !== null && _response$data2 !== void 0 && _response$data2.login.user)) {\n                      _context.next = 14;\n                      break;\n                    }\n\n                    toast({\n                      title: \"성공적으로 처리하였습니다\",\n                      description: \"로그인 완료\",\n                      status: \"success\",\n                      duration: 1000,\n                      isClosable: true\n                    });\n                    router.push(\"/\");\n                    _context.next = 13;\n                    return delay(500);\n\n                  case 13:\n                    router.reload;\n\n                  case 14:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n          return function (_x, _x2) {\n            return _ref3.apply(this, arguments);\n          };\n        }(),\n        children: function children(_ref4) {\n          var isSubmitting = _ref4.isSubmitting;\n          return /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(InputField, {\n              name: \"username\",\n              placeholder: \"\\uB2C9\\uB124\\uC784\",\n              label: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Box, {\n              mt: 4,\n              children: /*#__PURE__*/_jsxDEV(InputField, {\n                name: \"password\",\n                placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n                label: \"Password\",\n                type: \"password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              mt: 4,\n              isLoading: isSubmitting,\n              type: \"submit\",\n              backgroundColor: \"teal\",\n              color: \"white\",\n              children: \"\\uB85C\\uADF8\\uC778\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Login, \"BgeqUP8It4FZYkLA8r5WsjBlye8=\", false, function () {\n  return [useRouter, useMeQuery, useToast, useLoginMutation];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/keki/dev/websites/lireddit/web/src/pages/login.tsx"],"names":["Box","Button","useToast","Form","Formik","React","InputField","Wrapper","useLoginMutation","toErrorMap","useRouter","Navbar","useMeQuery","Login","router","data","delay","ms","Promise","resolve","setTimeout","me","alert","push","toast","login","username","password","values","setErrors","options","response","errors","user","title","description","status","duration","isClosable","reload","isSubmitting"],"mappings":"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","sourcesContent":["import { Box, Button, useToast } from \"@chakra-ui/react\";\nimport { Form, Formik } from \"formik\";\nimport React from \"react\";\nimport { InputField } from \"../components/InputField\";\nimport { Wrapper } from \"../components/Wrapper\";\nimport { useLoginMutation } from \"../generated/graphql\";\nimport { toErrorMap } from \"../utils/toErrorMap\";\nimport { useRouter } from \"next/router\";\nimport { Navbar } from \"../components/Navbar\";\nimport { useMeQuery } from \"../generated/graphql\";\n\ninterface loginProps {}\n\nconst Login: React.FC<loginProps> = ({}) => {\n  const router = useRouter();\n\n  const [{ data }] = useMeQuery();\n\n  function delay(ms: number) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  if (data?.me) {\n    alert(\"이미 로그인 되어 있습니다\");\n    router.push(\"/\");\n  }\n\n  const toast = useToast();\n  const [, login] = useLoginMutation();\n  return (\n    <>\n      <Navbar />\n      <Wrapper variant=\"small\">\n        <Formik\n          initialValues={{ username: \"\", password: \"\" }}\n          onSubmit={async (values, { setErrors }) => {\n            const response = await login({ options: values });\n            if (response.data?.login.errors) {\n              setErrors(toErrorMap(response.data.login.errors));\n            } else if (response.data?.login.user) {\n              toast({\n                title: \"성공적으로 처리하였습니다\",\n                description: \"로그인 완료\",\n                status: \"success\",\n                duration: 1000,\n                isClosable: true,\n              });\n\n              router.push(\"/\");\n              await delay(500);\n              router.reload;\n            }\n          }}\n        >\n          {({ isSubmitting }) => (\n            <Form>\n              <InputField\n                name=\"username\"\n                placeholder=\"닉네임\"\n                label=\"Username\"\n              />\n              <Box mt={4}>\n                <InputField\n                  name=\"password\"\n                  placeholder=\"비밀번호\"\n                  label=\"Password\"\n                  type=\"password\"\n                />\n              </Box>\n              <Button\n                mt={4}\n                isLoading={isSubmitting}\n                type=\"submit\"\n                backgroundColor=\"teal\"\n                color=\"white\"\n              >\n                로그인\n              </Button>\n            </Form>\n          )}\n        </Formik>\n      </Wrapper>\n    </>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}