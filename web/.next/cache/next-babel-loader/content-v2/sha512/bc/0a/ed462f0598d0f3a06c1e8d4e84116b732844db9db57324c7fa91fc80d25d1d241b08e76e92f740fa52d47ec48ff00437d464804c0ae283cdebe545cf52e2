{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/keki/dev/websites/lireddit/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"/Users/keki/dev/websites/lireddit/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _jsxFileName = \"/Users/keki/dev/websites/lireddit/web/src/components/Navbar.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Box, Flex } from \"@chakra-ui/layout\";\nimport React from \"react\";\nimport NextLink from \"next/link\";\nimport { Button } from \"@chakra-ui/button\";\nimport { useMeQuery } from \"../generated/graphql\";\nexport var Navbar = function Navbar(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var _useMeQuery = useMeQuery(),\n      _useMeQuery2 = _slicedToArray(_useMeQuery, 1),\n      _useMeQuery2$ = _useMeQuery2[0],\n      data = _useMeQuery2$.data,\n      fetching = _useMeQuery2$.fetching;\n\n  var body = null; // Data is loading\n\n  if (fetching) {// user not logged in\n  } else if (!(data !== null && data !== void 0 && data.me)) {// user is logged in\n  } else {}\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      bgGradient: \"#1A202C\",\n      p: 4,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        ml: \"auto\",\n        children: [/*#__PURE__*/_jsxDEV(NextLink, {\n          href: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline\",\n            colorScheme: \"teal\",\n            mr: 2,\n            children: \"\\uD648\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(NextLink, {\n          href: \"login\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline\",\n            colorScheme: \"teal\",\n            mr: 2,\n            children: \"\\uB85C\\uADF8\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(NextLink, {\n          href: \"register\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline\",\n            colorScheme: \"teal\",\n            children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_s(Navbar, \"8DQvut1eX6vBh4GVSiANs/7NvU8=\", false, function () {\n  return [useMeQuery];\n});\n\n_c = Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["/Users/keki/dev/websites/lireddit/web/src/components/Navbar.tsx"],"names":["Box","Flex","React","NextLink","Button","useMeQuery","Navbar","data","fetching","body","me"],"mappings":";;;;;;;;;AAAA,SAASA,GAAT,EAAcC,IAAd,QAA0B,mBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,UAAT,QAA2B,sBAA3B;AAIA,OAAO,IAAMC,MAA6B,GAAG,SAAhCA,MAAgC,OAAQ;AAAA;;AAAA;;AAAA,oBACtBD,UAAU,EADY;AAAA;AAAA;AAAA,MAC1CE,IAD0C,iBAC1CA,IAD0C;AAAA,MACpCC,QADoC,iBACpCA,QADoC;;AAEnD,MAAIC,IAAI,GAAG,IAAX,CAFmD,CAInD;;AACA,MAAID,QAAJ,EAAc,CACZ;AACD,GAFD,MAEO,IAAI,EAACD,IAAD,aAACA,IAAD,eAACA,IAAI,CAAEG,EAAP,CAAJ,EAAe,CACpB;AACD,GAFM,MAEA,CACN;;AAED,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,UAAU,EAAC,SAAjB;AAA2B,MAAA,CAAC,EAAE,CAA9B;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,MAAT;AAAA,gCACE,QAAC,QAAD;AAAU,UAAA,IAAI,EAAC,GAAf;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,SAAhB;AAA0B,YAAA,WAAW,EAAC,MAAtC;AAA6C,YAAA,EAAE,EAAE,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBADF,eAME,QAAC,QAAD;AAAU,UAAA,IAAI,EAAC,OAAf;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,SAAhB;AAA0B,YAAA,WAAW,EAAC,MAAtC;AAA6C,YAAA,EAAE,EAAE,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBANF,eAWE,QAAC,QAAD;AAAU,UAAA,IAAI,EAAC,UAAf;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,SAAhB;AAA0B,YAAA,WAAW,EAAC,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAuBD,CAnCM;;GAAMJ,M;UACkBD,U;;;KADlBC,M","sourcesContent":["import { Box, Flex } from \"@chakra-ui/layout\";\nimport React from \"react\";\nimport NextLink from \"next/link\";\nimport { Button } from \"@chakra-ui/button\";\nimport { useMeQuery } from \"../generated/graphql\";\n\ninterface NavbarProps {}\n\nexport const Navbar: React.FC<NavbarProps> = ({}) => {\n  const [{ data, fetching }] = useMeQuery();\n  let body = null;\n\n  // Data is loading\n  if (fetching) {\n    // user not logged in\n  } else if (!data?.me) {\n    // user is logged in\n  } else {\n  }\n\n  return (\n    <>\n      <Flex bgGradient=\"#1A202C\" p={4}>\n        <Box ml={\"auto\"}>\n          <NextLink href=\"/\">\n            <Button variant=\"outline\" colorScheme=\"teal\" mr={2}>\n              홈\n            </Button>\n          </NextLink>\n          <NextLink href=\"login\">\n            <Button variant=\"outline\" colorScheme=\"teal\" mr={2}>\n              로그인\n            </Button>\n          </NextLink>\n          <NextLink href=\"register\">\n            <Button variant=\"outline\" colorScheme=\"teal\">\n              회원가입\n            </Button>\n          </NextLink>\n        </Box>\n      </Flex>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}