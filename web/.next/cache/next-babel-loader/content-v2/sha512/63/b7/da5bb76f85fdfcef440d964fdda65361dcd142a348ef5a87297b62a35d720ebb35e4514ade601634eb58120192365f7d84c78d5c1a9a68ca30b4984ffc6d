{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/keki/dev/websites/lireddit/web/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/keki/dev/websites/lireddit/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/keki/dev/websites/lireddit/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"/Users/keki/dev/websites/lireddit/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _jsxFileName = \"/Users/keki/dev/websites/lireddit/web/src/pages/login.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Box, Button, useToast } from \"@chakra-ui/react\";\nimport { Form, Formik } from \"formik\";\nimport React from \"react\";\nimport { InputField } from \"../components/InputField\";\nimport { Wrapper } from \"../components/Wrapper\";\nimport { useLoginMutation } from \"../generated/graphql\";\nimport { toErrorMap } from \"../utils/toErrorMap\";\nimport { useRouter } from \"next/router\";\n\nvar Login = function Login(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var router = useRouter();\n  var toast = useToast();\n\n  var _useLoginMutation = useLoginMutation(),\n      _useLoginMutation2 = _slicedToArray(_useLoginMutation, 2),\n      login = _useLoginMutation2[1];\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    variant: \"small\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        username: \"\",\n        password: \"\"\n      },\n      onSubmit: /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref2) {\n          var _response$data, _response$data2;\n\n          var setErrors, response;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  setErrors = _ref2.setErrors;\n                  _context.next = 3;\n                  return login({\n                    options: values\n                  });\n\n                case 3:\n                  response = _context.sent;\n\n                  if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.login.errors) {\n                    setErrors(toErrorMap(response.data.login.errors));\n                  } else if ((_response$data2 = response.data) !== null && _response$data2 !== void 0 && _response$data2.login.user) {\n                    toast({\n                      title: \"성공적으로 처리하였습니다\",\n                      description: \"로그인 완료\",\n                      status: \"success\",\n                      duration: 1000,\n                      isClosable: true\n                    });\n                    router.push(\"/\");\n                  }\n\n                case 5:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x, _x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }(),\n      children: function children(_ref4) {\n        var isSubmitting = _ref4.isSubmitting;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(InputField, {\n            name: \"username\",\n            placeholder: \"\\uB2C9\\uB124\\uC784\",\n            label: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Box, {\n            mt: 4,\n            children: /*#__PURE__*/_jsxDEV(InputField, {\n              name: \"password\",\n              placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n              label: \"Password\",\n              type: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            mt: 4,\n            isLoading: isSubmitting,\n            type: \"submit\",\n            backgroundColor: \"teal\",\n            color: \"white\",\n            children: \"\\uB85C\\uADF8\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Login, \"r9abwOgzTyoZiSU2/CofF45siI0=\", false, function () {\n  return [useRouter, useToast, useLoginMutation];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/keki/dev/websites/lireddit/web/src/pages/login.tsx"],"names":["Box","Button","useToast","Form","Formik","React","InputField","Wrapper","useLoginMutation","toErrorMap","useRouter","Login","router","toast","login","username","password","values","setErrors","options","response","data","errors","user","title","description","status","duration","isClosable","push","isSubmitting"],"mappings":"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","sourcesContent":["import { Box, Button, useToast } from \"@chakra-ui/react\";\nimport { Form, Formik } from \"formik\";\nimport React from \"react\";\nimport { InputField } from \"../components/InputField\";\nimport { Wrapper } from \"../components/Wrapper\";\nimport { useLoginMutation } from \"../generated/graphql\";\nimport { toErrorMap } from \"../utils/toErrorMap\";\nimport { useRouter } from \"next/router\";\n\ninterface loginProps {}\n\nconst Login: React.FC<loginProps> = ({}) => {\n  const router = useRouter();\n  const toast = useToast();\n  const [, login] = useLoginMutation();\n  return (\n    <Wrapper variant=\"small\">\n      <Formik\n        initialValues={{ username: \"\", password: \"\" }}\n        onSubmit={async (values, { setErrors }) => {\n          const response = await login({ options: values });\n          if (response.data?.login.errors) {\n            setErrors(toErrorMap(response.data.login.errors));\n          } else if (response.data?.login.user) {\n            toast({\n              title: \"성공적으로 처리하였습니다\",\n              description: \"로그인 완료\",\n              status: \"success\",\n              duration: 1000,\n              isClosable: true,\n            });\n\n            router.push(\"/\");\n          }\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <InputField name=\"username\" placeholder=\"닉네임\" label=\"Username\" />\n            <Box mt={4}>\n              <InputField\n                name=\"password\"\n                placeholder=\"비밀번호\"\n                label=\"Password\"\n                type=\"password\"\n              />\n            </Box>\n            <Button\n              mt={4}\n              isLoading={isSubmitting}\n              type=\"submit\"\n              backgroundColor=\"teal\"\n              color=\"white\"\n            >\n              로그인\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Wrapper>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}