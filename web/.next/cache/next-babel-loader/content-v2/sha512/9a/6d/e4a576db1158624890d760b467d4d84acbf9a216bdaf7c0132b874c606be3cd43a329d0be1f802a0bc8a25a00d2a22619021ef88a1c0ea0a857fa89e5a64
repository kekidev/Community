{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/keki/dev/websites/lireddit/web/src/pages/register.tsx\";\nimport { FormControl, FormLabel, Input } from \"@chakra-ui/react\";\nimport { Form, Formik } from \"formik\";\nimport React from \"react\";\n\nconst Register = ({}) => {\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      username: \"\",\n      password: \"\"\n    },\n    onSubmit: values => {\n      console.log(values);\n    },\n    children: ({\n      values,\n      handleChange\n    }) => /*#__PURE__*/_jsxDEV(Form, {\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: values.username,\n          onChange: handleChange,\n          id: \"username\",\n          placeholder: \"username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Register;","map":{"version":3,"sources":["/Users/keki/dev/websites/lireddit/web/src/pages/register.tsx"],"names":["FormControl","FormLabel","Input","Form","Formik","React","Register","username","password","values","console","log","handleChange"],"mappings":";;AAAA,SACEA,WADF,EAEEC,SAFF,EAGEC,KAHF,QAKO,kBALP;AAMA,SAASC,IAAT,EAAeC,MAAf,QAA6B,QAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAIA,MAAMC,QAAiC,GAAG,CAAC,EAAD,KAAQ;AAChD,sBACE,QAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAEC,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,QAAQ,EAAE;AAA1B,KADjB;AAEE,IAAA,QAAQ,EAAGC,MAAD,IAAY;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD,KAJH;AAAA,cAMG,CAAC;AAAEA,MAAAA,MAAF;AAAUG,MAAAA;AAAV,KAAD,kBACC,QAAC,IAAD;AAAA,6BACE,QAAC,WAAD;AAAA,gCACE,QAAC,SAAD;AAAW,UAAA,OAAO,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AACE,UAAA,KAAK,EAAEH,MAAM,CAACF,QADhB;AAEE,UAAA,QAAQ,EAAEK,YAFZ;AAGE,UAAA,EAAE,EAAC,UAHL;AAIE,UAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CAxBD;;AA0BA,eAAeN,QAAf","sourcesContent":["import {\n  FormControl,\n  FormLabel,\n  Input,\n  FormErrorMessage,\n} from \"@chakra-ui/react\";\nimport { Form, Formik } from \"formik\";\nimport React from \"react\";\n\ninterface registerProps {}\n\nconst Register: React.FC<registerProps> = ({}) => {\n  return (\n    <Formik\n      initialValues={{ username: \"\", password: \"\" }}\n      onSubmit={(values) => {\n        console.log(values);\n      }}\n    >\n      {({ values, handleChange }) => (\n        <Form>\n          <FormControl>\n            <FormLabel htmlFor=\"username\">Username</FormLabel>\n            <Input\n              value={values.username}\n              onChange={handleChange}\n              id=\"username\"\n              placeholder=\"username\"\n            />\n            {/* <FormErrorMessage>{form.errors.name}</FormErrorMessage> */}\n          </FormControl>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}